<launch>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="asymmetric_quadrotor"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/basic.world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="true"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>

  <group ns="asymmetric_quadrotor">
    <include file="$(find rotors_gazebo)/launch/spawn_asymmetric_quadrotor.launch">
      <!-- <arg name="model" value="$(find rotors_description)/urdf/asymmetric_quadrotor_generic_odometry_sensor.gazebo" /> -->
      <arg name="model" value="$(find rotors_description)/urdf/asymmetric_quadrotor_two_cameras.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_asymmetric_quadrotor.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/asymmetric_quadrotor.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>
  </group>
</launch>
